// Стрелочную функцию нельзя использовать в конструкторе

// Стрелочная функция не имеет своего контекста вызова(this), она берет его снаружи. Выходит из метода showFriends и берет в качестве контекста const Keks
const Keks = {
  name: `keks`,
  friends: [`снежок`, `барсик`],
  showFriends: function () {
    this.friends.forEach((name) => { // Keks.friends
      console.info(`${this.name} дружит с ${name}`); // Keks.name
    });
  }
};

// после выполнения функции внутри оброботчика this(зисом) будет элемент на котором произошло событие
element.addEventListener('click', function () {
  // code
});

// Параметрам можно задавать значение по умолчанию, three присваевается true, присвоение сработает если в третий параметр не чего не передается
function test(one, two, three = true) {
  // code
}

// Если функция состоит из одного return то его можно не указывать, написав сразу после стрелки выражение которое нужно вернуть
const multiply = () => 2 * 3;

// Если у функции только один параметр, скобки можно не ставить, во всех остальных случаях когда два и более, или параметров нет, скобки нужны
const noParam = param => param * 3;

// Чтобы вернуть объект из стрелочной функции, его нужно обернуть в круглые скобки
const obj = () => ({
  name: `Name`,
  age: 30
});
console.log(obj);
