'use strict';

// Функция запуска одинаковых операций через определённый промежуток времени
const test = time => { // Принимает аргумент 1000 секунд. 
  return new Promise(resolve => { // Возвращает Promise в функцию test
    setTimeout(() => resolve(), time); // Внутри resolve() находится .then(). Функция resolve выполняется через заданное время
  });
};

// test(1000).then(() => console.log('1000 ms')); // Запуск функций test и resolve с аргументами
// test(2000).then(() => console.log('2000 ms'));


Promise.all([test(1000), test(2000)]).then(() => { // Во внутрь all передаются массивы с функциями в которых содержатся Promise, all ждет пока все массивы не загрузятся
  console.log('Загрузка прошла успешна...');
});

Promise.race([test(1000), test(2000)]).then(() => { // Во внутрь race передаются массивы с функциями в которых содержатся Promise, race начинает работать когда будет загружен первый массив
  console.log('Загрузка прошла успешна...');
});
